{"version":3,"file":"plaseaza-comanda.vue.mjs","sources":["../../../../pages/plaseaza-comanda.vue"],"sourcesContent":["<template>\n  <div class=\"max-w-3xl mx-auto p-6 bg-slate-50/75 \">\n    <h1 class=\"text-3xl font-bold mb-6\">Purchase Order</h1>\n\n    <form @submit.prevent=\"submitOrder\" class=\"space-y-6\">\n      <div>\n        <label class=\"block mb-2 font-semibold\">What would you like to purchase?</label>\n      </div>\n\n      <div class=\"grid grid-cols-2 gap-4\">\n        <input v-model=\"first_name\" type=\"text\" placeholder=\"First Name\" class=\"input\" required />\n        <input v-model=\"last_name\" type=\"text\" placeholder=\"Last Name\" class=\"input\" required />\n      </div>\n\n      <div>\n        <label class=\"block mb-1 font-semibold\">Your E-mail</label>\n        <input v-model=\"customer_email\" type=\"email\" placeholder=\"example@example.com\" class=\"input w-full\" required />\n      </div>\n      <div>\n        <label class=\"block mb-1 font-semibold\">Your Phone number</label>\n        <input v-model=\"customer_phone\" type=\"text\" placeholder=\"\" class=\"input w-full\" required />\n      </div>\n\n      <div>\n        <label class=\"block mb-1 font-semibold\">Shipping Address</label>\n        <input v-model=\"address.street1\" type=\"text\" placeholder=\"Street Address\" class=\"input w-full mb-2\" required />\n        <div class=\"grid grid-cols-3 gap-4\">\n          <input v-model=\"address.city\" type=\"text\" placeholder=\"City\" class=\"input\" required />\n          <input v-model=\"address.state\" type=\"text\" placeholder=\"State / Province\" class=\"input\" required />\n          <input v-model=\"address.zip\" type=\"text\" placeholder=\"Postal / Zip Code\" class=\"input\" required />\n        </div>\n      </div>\n      <div>\n        <label class=\"block mb-2 font-semibold\">Payment Methods</label>\n        <select v-model=\"payment_method\" class=\"input w-full\">\n          <option value=\"cod\">Numerar la livrare</option>\n          <option disabled value=\"card\">Card - indisponibil momentan</option>\n\n        </select>\n      </div>\n      <div class=\"justify-center flex\">\n\n        <button type=\"submit\" :disabled=\"isSubmitting\" class=\"bg-blue-600 text-white py-2 px-6 rounded hover:bg-blue-700\">\n          <span v-if=\"isSubmitting\">\n            <svg class=\"animate-spin h-5 w-5 mr-2 inline-block text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n              <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n              <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8v4a4 4 0 00-4 4H4z\"></path>\n            </svg>\n            Se trimite...\n          </span>\n          <span v-else>\n            Submit Order\n          </span>\n        </button>\n      </div>\n      <div>\n        <h2 class=\"text-xl font-semibold mb-4\">My Products</h2>\n        <div v-for=\"product in cartItems\" :key=\"product.name\" class=\"border p-4 rounded mb-4\">\n          <div class=\"flex justify-between items-center\">\n            <div>\n              <p class=\"font-semibold\">{{ product.name }}</p>\n\n            </div>\n            <div>\n              <span class=\"font-bold\">${{ product.price }}</span>\n              <input type=\"number\" min=\"0\" class=\"input ml-4 w-20\" v-model.number=\"product.quantity\" />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"text-right text-lg font-semibold\">\n        Total: ${{ totalPrice }}\n      </div>\n\n    </form>\n  </div>\n</template>\n\n<script setup>\nconst cart = useCartStore()\nlet first_name = '';\nlet last_name = '';\nlet payment_method = 'cod';\nlet address = {\n  street1: '',\n  city: '',\n  state: '',\n  zip: ''\n}\nlet customer_email = '';\nlet customer_phone = '';\nconst isSubmitting = ref(false)\n\nconst cartItems = ref([\n\n])\n\nonMounted(() => {\n  const storedItems = localStorage.getItem('cart')\n  console.log('Stored items:', storedItems)\n  if (storedItems) {\n    try {\n      cartItems.value = JSON.parse(storedItems)\n    } catch (e) {\n      console.error('Failed to parse cartItems from localStorage', e)\n    }\n  }\n})\n\nconst totalPrice = computed(() =>\n  cartItems.value.reduce((sum, p) => sum + p.price * p.quantity, 0)\n)\n\nconst submitOrder = async () => {\n  if (isSubmitting.value) return\n  isSubmitting.value = true\n  const payload = {\n    customer_name: `${first_name} ${last_name}`,\n    customer_address: `${address.street1} ${address.city} ${address.state}, ${address.zip}`,\n    customer_email,\n    customer_phone,\n    products: cartItems.value\n      .filter(p => p.quantity > 0)\n      .map(p => ({\n        quantity: p.quantity,\n        product_id: p.id,\n        name: p.name,\n        unit_price: p.price\n      })),\n    total_price: totalPrice.value,\n    status: 'pending',\n  }\n  console.log('Payload:', payload)\n  try {\n    const config = useRuntimeConfig()\n    const res = await $fetch(`${config.public.apiBase}/orders`, {\n      method: 'POST',\n      body: payload\n    })\n\n    cart.clear() // ✅ goleşti tot din store și localStorage\n    window.location.href = '/'\n    alert('Order submitted successfully!')\n\n  } catch (e) {\n    console.error('Order submission error:', e);\n    if (e.response?._data) {\n      console.error('Server said:', e.response._data);\n      alert(e.response._data.message);\n      window.location.href = '/'\n    } else {\n      alert('Failed to submit order.');\n    }\n  } finally {\n    isSubmitting.value = false\n  }\n}\n</script>\n\n<style scoped>\n.input {\n  padding: 0.5rem;\n  border: 1px solid #ccc;\n  border-radius: 0.375rem;\n}\n</style>"],"names":[],"mappings":";;;;;;;;;AAgFa,iBAAa;AAC1B,QAAI,aAAa;AACjB,QAAI,YAAY;AAChB,QAAI,iBAAiB;AACrB,QAAI,UAAU;AAAA,MACZ,SAAS;AAAA,MACT,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,IACP;AACA,QAAI,iBAAiB;AACrB,QAAI,iBAAiB;AACf,UAAA,eAAe,IAAI,KAAK;AAExB,UAAA,YAAY,IAAI,EAErB;AAcD,UAAM,aAAa;AAAA,MAAS,MAC1B,UAAU,MAAM,OAAO,CAAC,KAAK,MAAM,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC;AAAA,IAClE;;;;;;;;;;;;;;;;;;;;;;;"}